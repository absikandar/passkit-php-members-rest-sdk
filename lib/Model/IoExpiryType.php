<?php
/**
 * IoExpiryType
 *
 * PHP version 5
 *
 * @category Class
 * @package  PkIo
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PassKit Members API
 *
 * The PassKit Members API lets you manage your membership programs and passes for Apple Wallet and Google Pay.
 *
 * OpenAPI spec version: 1.0-rc
 * Contact: support@passkit.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace PkIo\Model;
use \PkIo\ObjectSerializer;

/**
 * IoExpiryType Class Doc Comment
 *
 * @category Class
 * @description Options to manage the expiry date of the digital card.   - EXPIRE_NONE: Please do not use this enum. This enum do not have any effect on expiry logic.  - EXPIRE_ON_FIXED_DATE: Expiry date is set with year, month and date. The expiry date will be based on your timezone. The digital card will expire at 23:59:59:59.99999 of set date in fixed timezone. The expiry date is the same for all cards.  - EXPIRE_AFTER_X_DAYS: The digital card expires after the number of days after the digital card issuing.  - EXPIRE_ON_VARIABLE_DATE_TIME: If you want to change expiry date for each digital card, you can use this expiry type. You can set expiry date and time in fixed timezone.  - EXPIRE_SET_TO_NULL: The digital card will set as NULL and the pass will not expire..
 * @package  PkIo
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class IoExpiryType
{
    /**
     * Possible values of this enum
     */
    const NONE = 'EXPIRE_NONE';
const ON_FIXED_DATE = 'EXPIRE_ON_FIXED_DATE';
const AFTER_X_DAYS = 'EXPIRE_AFTER_X_DAYS';
const ON_VARIABLE_DATE_TIME = 'EXPIRE_ON_VARIABLE_DATE_TIME';
const SET_TO_NULL = 'EXPIRE_SET_TO_NULL';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::NONE,
self::ON_FIXED_DATE,
self::AFTER_X_DAYS,
self::ON_VARIABLE_DATE_TIME,
self::SET_TO_NULL,        ];
    }
}
